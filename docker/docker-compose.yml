version: '3.1'

services:

  db-delivery-1:
      build:
        context: database
        dockerfile: Dockerfile
      container_name: db-delivery-1
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: $MARIADB_NAME
        MYSQL_USER: $MARIADB_USER
        MYSQL_PASSWORD: $MARIADB_PASSWORD
        MYSQL_ROOT_PASSWORD: $MARIADB_ROOT_PASSWORD
      configs:
          - source: mariadb_conf1
            target: /etc/mysql/my.cnf
          - source: mariadb_conf2
            target: /etc/mysql/mysql.conf.d/mysqld.cnf
      healthcheck:
        test: "/usr/bin/mariadb --user=$MARIADB_USER --password=$MARIADB_PASSWORD --execute \"SHOW DATABASES;\""
        timeout: 20s
        retries: 5
      command: >
        --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
        --general-log=ON
        --log-queries-not-using-indexes=ON
      networks:
        - delivery-network
      ports:
        - $EXTERNAL_NODE1_PORT:3306
      volumes:
        - db-delivery-1:/var/lib/mysql

  db-delivery-2:
    build:
      context: database
      dockerfile: Dockerfile
    container_name: db-delivery-2
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: $MARIADB_NAME
      MYSQL_USER: $MARIADB_USER
      MYSQL_PASSWORD: $MARIADB_PASSWORD
      MYSQL_ROOT_PASSWORD: $MARIADB_ROOT_PASSWORD
    configs:
        - source: mariadb_conf1
          target: /etc/mysql/my.cnf
        - source: mariadb_conf2
          target: /etc/mysql/mysql.conf.d/mysqld.cnf
    healthcheck:
      test: "/usr/bin/mariadb --user=$MARIADB_USER --password=$MARIADB_PASSWORD --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - delivery-network
    ports:
      - $EXTERNAL_NODE2_PORT:3306
    volumes:
      - db-delivery-2:/var/lib/mysql



  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: db-delivery-proxy
    healthcheck:
      test: "/usr/bin/mysql -h 127.0.0.1 -P $PROXYSQL_CLIENT_PORT --user=$MARIADB_USER --password=$MARIADB_PASSWORD --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 5
    networks:
      - delivery-network
    configs:
        - source: proxysql_conf
          target: /etc/proxysql.cnf
    ports:
      - $PROXYSQL_CLIENT_PORT:$PROXYSQL_CLIENT_PORT
      - $PROXYSQL_ADMIN_PORT:$PROXYSQL_ADMIN_PORT
    depends_on:
      - db-delivery-1
      - db-delivery-2
    volumes:
      - proxysql-data:/var/lib/proxysql

  cache:
    image: redis:6.2-alpine
    restart: always
    container_name: delivery-redis-cache
    ports:
      - $REDIS_EXPOSE_PORT:$REDIS_PORT
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - delivery-network
    volumes:
      - delivery-cache:/data

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    environment:
        ZOOKEEPER_CLIENT_PORT: $ZOOKEEPER_CLIENT_PORT
        ZOOKEEPER_TICK_TIME: $ZOOKEEPER_TICK_TIME
        ZOOKEEPER_INIT_LIMIT: $ZOOKEEPER_INIT_LIMIT
    networks:
      - delivery-network

  kafka-node-1:
    image: wurstmeister/kafka
    container_name: kafka-node-1
    depends_on:
      - zookeeper
    ports:
      - $KAFKA_ZOOKEEPER_EXPOSE_PORT:$KAFKA_ZOOKEEPER_PORT
      - $ADVERTISED_EXPOSE_PORT:$ADVERTISED_PORT
    networks:
      - delivery-network
    environment:
        KAFKA_BROKER_ID: $KAFKA_BROKER_ID
        KAFKA_ZOOKEEPER_CONNECT: $KAFKA_ZOOKEEPER_CONNECT
        KAFKA_ADVERTISED_HOST_NAME: $KAFKA_ADVERTISED_HOST_NAME
        ADVERTISED_PORT: $ADVERTISED_PORT
        ADVERTISED_HOST_NAME: $ADVERTISED_HOST_NAME
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: $KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        KAFKA_CREATE_TOPICS: $KAFKA_CREATE_TOPICS

  user_server:
    build:
      context: user_server
      dockerfile: Dockerfile
    container_name: user_server
    environment:
      - DATABASE_HOST=$USER_APP_DATABASE_HOST
      - DATABASE_PORT=$USER_APP_DATABASE_PORT
      - DATABASE_LOGIN=$USER_APP_DATABASE_LOGIN
      - DATABASE_PASSWORD=$USER_APP_DATABASE_PASSWORD
      - DATABASE_NAME=$USER_APP_DATABASE_NAME
      - APP_PORT=$USER_APP_PORT
      - CACHE_ADRESS=$USER_APP_CACHE_ADRESS
      - QUEUE_HOST=$USER_APP_QUEUE_HOST
      - QUEUE_TOPIC=$USER_APP_QUEUE_TOPIC
      - QUEUE_GROUP_ID=$USER_APP_QUEUE_GROUP_ID

    ports:
      - $USER_APP_EXTERNAL_PORT:$USER_APP_PORT
    networks:
      - delivery-network
    depends_on:
      proxysql:
        condition: service_healthy
    
  delivery_server:
    build:
      context: delivery_server
      dockerfile: Dockerfile
    container_name: delivery_server
    environment:
      - DATABASE_HOST=$DELIVERY_APP_DATABASE_HOST
      - DATABASE_PORT=$DELIVERY_APP_DATABASE_PORT
      - DATABASE_LOGIN=$DELIVERY_APP_DATABASE_LOGIN
      - DATABASE_PASSWORD=$DELIVERY_APP_DATABASE_PASSWORD
      - DATABASE_NAME=$DELIVERY_APP_DATABASE_NAME
      - APP_PORT=$DELIVERY_APP_PORT
      - URL_USER_SERVICE=$DELIVERY_APP_URL_USER_SERVICE
    ports:
      - $DELIVERY_APP_EXTERNAL_PORT:$DELIVERY_APP_PORT
    networks:
      - delivery-network
    depends_on:
      proxysql:
        condition: service_healthy


  user_writer_service:
    build:
      context: writer_user
      dockerfile: Dockerfile
    container_name: delivery_user_writer
    environment:
      - DATABASE_HOST=$DELIVERY_APP_DATABASE_HOST
      - DATABASE_PORT=$DELIVERY_APP_DATABASE_PORT
      - DATABASE_LOGIN=$DELIVERY_APP_DATABASE_LOGIN
      - DATABASE_PASSWORD=$DELIVERY_APP_DATABASE_PASSWORD
      - DATABASE_NAME=$DELIVERY_APP_DATABASE_NAME
      - CACHE_ADRESS=$USER_APP_CACHE_ADRESS
      - QUEUE_HOST=$USER_APP_QUEUE_HOST
      - QUEUE_TOPIC=$USER_APP_QUEUE_TOPIC
      - QUEUE_GROUP_ID=$USER_APP_QUEUE_GROUP_ID
    networks:
      - delivery-network
    depends_on:
      proxysql:
        condition: service_healthy


volumes:
  db-delivery-1:
  db-delivery-2:
  db-delivery-3:
  proxysql-data:
  delivery-cache:

networks:
  delivery-network:
    driver: "bridge"


configs:
  mariadb_conf1:
    file: ./database/my.cnf
  mariadb_conf2:
    file: ./database/config/mysqld.cnf
  proxysql_conf:
    file: ./proxysql/proxysql.cnf
